# LaraPress - Aplikasi Blog Sederhana

<p align="center">
  <img src="docs/screenshot-welcome.png" alt="LaraPress" width="600">
</p>

<p align="center">
  <strong>Aplikasi blog modern dibangun dengan Laravel 12</strong>
</p>

<p align="center">
  <a href="#-tentang-larapress">Tentang</a> ‚Ä¢
  <a href="#-fitur-utama">Fitur</a> ‚Ä¢
  <a href="#-dokumentasi-iterasi">Dokumentasi</a> ‚Ä¢
  <a href="#-instalasi">Instalasi</a> ‚Ä¢
  <a href="#-screenshot">Screenshot</a>
</p>

---

## üìñ Tentang LaraPress

**LaraPress** adalah aplikasi blog sederhana yang dibangun menggunakan **Laravel 12** untuk tujuan pembelajaran dan pengembangan keterampilan web development. Proyek ini dikembangkan secara iteratif, dimulai dari konsep dasar routing dan views, hingga implementasi fitur-fitur modern seperti autentikasi, CRUD operations, dan manajemen konten.

### üéØ Tujuan Proyek

Proyek LaraPress dibuat dengan tujuan:
1. **Pembelajaran Framework Laravel** - Memahami konsep MVC, routing, Eloquent ORM, dan fitur Laravel lainnya
2. **Best Practices** - Menerapkan praktik terbaik dalam development aplikasi web
3. **Portfolio Project** - Sebagai portofolio untuk mendemonstrasikan kemampuan web development
4. **Dokumentasi Lengkap** - Setiap iterasi terdokumentasi dengan baik untuk referensi pembelajaran

### üåü Filosofi Development

Proyek ini dikembangkan dengan filosofi:
- **Incremental Development** - Dikembangkan secara bertahap, satu fitur pada satu waktu
- **Clean Code** - Kode yang mudah dibaca, dipahami, dan di-maintain
- **Security First** - Keamanan adalah prioritas, bukan afterthought
- **User Experience** - Fokus pada pengalaman pengguna yang baik

---

## üöÄ Fitur Utama

### ‚úÖ Fitur yang Sudah Diimplementasikan

#### 1. üìÑ **Views & Routing Dasar**
   - Halaman utama dengan sambutan
   - Halaman "Tentang Kami"
   - Routing sederhana dan efisien
   - [üìñ Dokumentasi Lengkap](docs/ITERASI-VIEW.md)

#### 2. üîê **Sistem Autentikasi (Laravel Breeze)**
   - ‚úÖ Login & Registrasi pengguna
   - ‚úÖ Profile Management
   - ‚úÖ Password Reset via email
   - ‚úÖ Email Verification
   - ‚úÖ Session Management yang aman
   - ‚úÖ Dashboard untuk user yang login
   - ‚úÖ Middleware protection untuk route
   - [üìñ Dokumentasi Lengkap](docs/ITERASI-autentikasi.md)

### üîÑ Fitur dalam Pengembangan

#### 3. üìù **CRUD Posts** (Coming Soon)
   - [ ] Membuat artikel blog baru
   - [ ] Mengedit artikel
   - [ ] Menghapus artikel
   - [ ] Daftar semua artikel
   - [ ] Detail artikel

#### 4. üë• **Manajemen User & Roles** (Planned)
   - [ ] Role: Admin, Author, Reader
   - [ ] Authorization policies
   - [ ] User hanya bisa edit post sendiri
   - [ ] Admin dashboard

#### 5. üí¨ **Sistem Komentar** (Planned)
   - [ ] Komentar di artikel
   - [ ] Reply komentar
   - [ ] Moderasi komentar

---

## üìö Dokumentasi Iterasi

Proyek ini dikembangkan secara iteratif. Setiap iterasi memiliki dokumentasi lengkap:

| Iterasi | Fitur | Status | Dokumentasi |
|---------|-------|--------|-------------|
| **Iterasi 1** | Views & Routing Dasar | ‚úÖ Selesai | [ITERASI-VIEW.md](docs/ITERASI-VIEW.md) |
| **Iterasi 2** | Sistem Autentikasi | ‚úÖ Selesai | [ITERASI-autentikasi.md](docs/ITERASI-autentikasi.md) |
| **Iterasi 3** | CRUD Posts | üîÑ Progress | Coming Soon |
| **Iterasi 4** | Relasi & Otorisasi | üìã Planned | Coming Soon |
| **Iterasi 5** | Sistem Komentar | üìã Planned | Coming Soon |

### üìñ Cara Membaca Dokumentasi

1. **Mulai dari [ITERASI-VIEW.md](docs/ITERASI-VIEW.md)** - Pahami dasar routing dan views
2. **Lanjut ke [ITERASI-autentikasi.md](docs/ITERASI-autentikasi.md)** - Pelajari implementasi autentikasi
3. **Ikuti iterasi selanjutnya** sesuai urutan untuk pembelajaran yang sistematis

---

## üé® Cerita di Balik LaraPress

### Awal Mula: Sebuah Halaman Sederhana

Perjalanan LaraPress dimulai dari sebuah halaman sederhana dengan tulisan "Selamat Datang di Blog LaraPress". Seperti kebanyakan aplikasi web, LaraPress memulai dari yang paling basic: **routing** dan **views**.

> *"Setiap aplikasi besar dimulai dari langkah kecil. LaraPress tidak berbeda."*

Pada iterasi pertama, fokus kami adalah memahami bagaimana Laravel menangani HTTP request, bagaimana router mengarahkan ke view yang tepat, dan bagaimana Blade template engine bekerja. Sederhana, tapi fundamental.

**üìñ Baca cerita lengkap**: [Iterasi 1 - Views & Routing](docs/ITERASI-VIEW.md)

### Evolusi: Keamanan dan Autentikasi

Setelah fondasi dasar terbentuk, langkah selanjutnya adalah menambahkan **identitas**. Siapa yang mengakses aplikasi? Bagaimana kita tahu mereka adalah orang yang mereka klaim?

Di sinilah **Laravel Breeze** masuk. Dengan filosofi "convention over configuration", Breeze memberikan sistem autentikasi yang aman, modern, dan mudah dipahami. Tidak hanya tentang login dan password, tapi juga tentang:

- üîê **Password Hashing** - Mengamankan password dengan Bcrypt
- üç™ **Session Management** - Mengingat user tanpa meminta login berulang kali
- üõ°Ô∏è **CSRF Protection** - Melindungi dari serangan berbahaya
- ‚úâÔ∏è **Email Verification** - Memastikan email user valid
- üîë **Password Reset** - Membantu user yang lupa password

> *"Autentikasi bukan hanya tentang keamanan, tapi juga tentang pengalaman pengguna yang seamless."*

**üìñ Baca cerita lengkap**: [Iterasi 2 - Autentikasi](docs/ITERASI-autentikasi.md)

### Masa Depan: Konten dan Komunitas

Dengan sistem autentikasi yang solid, LaraPress siap untuk fitur-fitur berikutnya:

- **Posts & Content Management** - Membuat, mengedit, dan mengelola artikel
- **Rich Text Editor** - Pengalaman menulis yang nyaman
- **Categories & Tags** - Organisasi konten yang rapi
- **Comments System** - Membangun komunitas pembaca
- **Search & Filter** - Menemukan konten dengan mudah

Setiap iterasi membawa LaraPress lebih dekat menjadi platform blog yang lengkap dan powerful.

---

## üìÅ Struktur File yang Dimodifikasi

### File yang Dibuat/Dimodifikasi:

1. **`resources/views/welcome.blade.php`**
   - Mengubah tampilan default Laravel yang kompleks menjadi struktur HTML sederhana
   - Menampilkan pesan sambutan untuk pengunjung blog

2. **`resources/views/about.blade.php`** (BARU)
   - File view baru untuk halaman "Tentang Kami"
   - Berisi informasi tentang LaraPress sebagai proyek pembelajaran

3. **`routes/web.php`**
   - Menambahkan route baru `/tentang-kami` yang mengarah ke view `about.blade.php`

> **ÔøΩ Catatan**: Detail lengkap implementasi views dan routing dapat dilihat di [ITERASI-VIEW.md](docs/ITERASI-VIEW.md)

---

## ÔøΩ Ringkasan Implementasi Autentikasi

### üéØ Tujuan Pembelajaran
Pada pertemuan ini, kita belajar tentang:
1. Konsep fundamental sistem autentikasi web
2. Alur kerja login dan peran session
3. Keamanan password dengan hashing
4. Implementasi Laravel Breeze
5. Middleware untuk proteksi route

### üîê Konsep Autentikasi

#### Apa itu Autentikasi?
**Autentikasi** adalah proses verifikasi identitas pengguna. Ini menjawab pertanyaan "Siapa Anda?".

**Analogi**: Seperti menunjukkan KTP di gerbang masuk kampus - satpam memverifikasi bahwa Anda adalah orang yang sah.

#### Perbedaan Autentikasi vs Otorisasi
- **Autentikasi**: Memverifikasi identitas ("Siapa Anda?")
- **Otorisasi**: Menentukan hak akses ("Apa yang boleh Anda lakukan?")

#### Alur Kerja Login
1. **Pengguna mengirim kredensial**: Email dan password di form login
2. **Aplikasi mencari pengguna**: Cek database apakah email terdaftar
3. **Verifikasi password**: 
   - Password yang diinput di-hash dengan algoritma yang sama
   - Hash dibandingkan dengan hash di database
   - TIDAK PERNAH membandingkan password asli
4. **Autentikasi berhasil**: Jika hash cocok, identitas terverifikasi
5. **Aplikasi "mengingat"**: Session dan Cookie dibuat untuk request selanjutnya

#### Keamanan Password: Hashing
**Hashing** adalah proses satu arah mengubah password menjadi karakter acak.

**Analogi**: Seperti menggiling daging menjadi sosis - mudah mengubah daging jadi sosis, tapi tidak bisa mengubah sosis kembali jadi daging.

Laravel menggunakan algoritma kuat (Bcrypt/Argon2). Jadi meskipun database bocor, password asli tetap aman!

#### Peran Cookies & Sessions
**Analogi Stempel Konser**:
- Saat masuk konser, Anda tunjukkan tiket (login dengan password)
- Petugas beri Anda stempel di tangan (Cookie)
- Selanjutnya, cukup tunjukkan stempel tanpa perlu tiket lagi

**Alur Teknis**:
1. Setelah login, Laravel membuat **Session** di server dengan data pengguna
2. Laravel mengirim ID session ke browser dalam bentuk **Cookie**
3. Setiap request, browser kirim cookie tersebut
4. Laravel cocokkan ID di cookie dengan session di server
5. Laravel tahu "Ah, ini si Budi yang tadi login!"

### üì¶ Instalasi Laravel Breeze

#### Langkah 1: Install Package Breeze
```bash
composer require laravel/breeze --dev
```

#### Langkah 2: Install Scaffolding Breeze
```bash
php artisan breeze:install blade --pest
```
Perintah ini akan:
- Membuat semua Controller autentikasi
- Membuat semua View (login, register, dll)
- Membuat route autentikasi
- Install Tailwind CSS
- Setup testing dengan Pest

#### Langkah 3: Install Dependencies Frontend
```bash
npm install
```

#### Langkah 4: Compile Assets
```bash
npm run dev
```

#### Langkah 5: Jalankan Migrasi
```bash
php artisan migrate
```
Migrasi ini menambahkan:
- Kolom `remember_token` ke tabel `users`
- Tabel `password_reset_tokens`
- Tabel `sessions`

### üìÇ File yang Ditambahkan oleh Breeze

#### Controllers Autentikasi
Lokasi: `app/Http/Controllers/Auth/`
- `AuthenticatedSessionController.php` - Mengatur login/logout
- `RegisteredUserController.php` - Mengatur registrasi
- `PasswordResetLinkController.php` - Mengatur lupa password
- `NewPasswordController.php` - Mengatur reset password
- `EmailVerificationNotificationController.php` - Verifikasi email
- `PasswordController.php` - Update password
- `ConfirmablePasswordController.php` - Konfirmasi password

#### Views Autentikasi
Lokasi: `resources/views/auth/`
- `login.blade.php` - Form login
- `register.blade.php` - Form registrasi
- `forgot-password.blade.php` - Form lupa password
- `reset-password.blade.php` - Form reset password
- `verify-email.blade.php` - Halaman verifikasi email
- `confirm-password.blade.php` - Form konfirmasi password

#### Layouts & Components
Lokasi: `resources/views/layouts/`
- `app.blade.php` - Layout utama aplikasi
- `guest.blade.php` - Layout untuk guest (belum login)
- `navigation.blade.php` - Navigasi header

#### Route Autentikasi
File: `routes/auth.php` - Berisi semua route autentikasi

### üîí Mengamankan Route dengan Middleware

#### Apa itu Middleware?
Middleware adalah "penjaga" yang memeriksa request sebelum mencapai controller.

**Middleware `auth`**: Memastikan pengguna sudah login sebelum mengakses route tertentu.

#### Cara Menggunakan Middleware Auth

**Opsi 1: Single Route**
```php
Route::get('/dashboard', function () {
    return view('dashboard');
})->middleware('auth');
```

**Opsi 2: Route Group (Lebih Efisien)**
```php
Route::middleware('auth')->group(function () {
    Route::get('/dashboard', [DashboardController::class, 'index']);
    Route::get('/profile', [ProfileController::class, 'edit']);
    Route::post('/posts', [PostController::class, 'store']);
});
```

#### Contoh Implementasi di LaraPress
```php
// Halaman Publik (tidak perlu login)
Route::get('/', function () {
    return view('welcome');
})->name('home');

Route::get('/tentang-kami', function () {
    return view('about');
})->name('about');

// Halaman yang Memerlukan Login
Route::middleware('auth')->group(function () {
    Route::get('/dashboard', function () {
        return view('dashboard');
    })->name('dashboard');
    
    Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
    Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
});
```

### üß™ Testing Autentikasi

#### Uji Coba 1: Registrasi
1. Jalankan server: `php artisan serve`
2. Buka browser: `http://localhost:8000`
3. Klik tombol "Register" di pojok kanan atas
4. Isi form registrasi dengan data valid
5. Klik "Register"
6. Anda akan diarahkan ke Dashboard

#### Uji Coba 2: Login
1. Klik "Logout" di navigation
2. Klik "Login"
3. Masukkan email dan password yang tadi didaftarkan
4. Klik "Login"
5. Anda akan masuk ke Dashboard

#### Uji Coba 3: Proteksi Route
1. Logout dari aplikasi
2. Coba akses langsung: `http://localhost:8000/dashboard`
3. Anda akan otomatis diarahkan ke halaman login!
4. Ini membuktikan middleware `auth` bekerja dengan baik

### üìä Alur Data Autentikasi

```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   Browser   ‚îÇ
‚îÇ  (Pengguna) ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
       ‚îÇ 1. Submit email & password
       ‚ñº
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ      Laravel Application        ‚îÇ
‚îÇ                                 ‚îÇ
‚îÇ  2. AuthenticatedSession        ‚îÇ
‚îÇ     Controller menerima data    ‚îÇ
‚îÇ                                 ‚îÇ
‚îÇ  3. Cari user berdasarkan email ‚îÇ
‚îÇ     di database                 ‚îÇ
‚îÇ                                 ‚îÇ
‚îÇ  4. Hash password input         ‚îÇ
‚îÇ                                 ‚îÇ
‚îÇ  5. Bandingkan hash dengan DB   ‚îÇ
‚îÇ                                 ‚îÇ
‚îÇ  6. Jika cocok:                 ‚îÇ
‚îÇ     - Buat Session              ‚îÇ
‚îÇ     - Kirim Cookie ke Browser   ‚îÇ
‚îÇ                                 ‚îÇ
‚îÇ  7. Redirect ke Dashboard       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
       ‚îÇ 8. Cookie disimpan
       ‚ñº
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   Browser   ‚îÇ
‚îÇ  (Logged In)‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

### üîë Konsep Penting Laravel Breeze

#### 1. CSRF Protection
Setiap form di Laravel Breeze memiliki `@csrf` token:
```blade
<form method="POST" action="{{ route('login') }}">
    @csrf
    <!-- form fields -->
</form>
```
Ini melindungi dari serangan Cross-Site Request Forgery.

#### 2. Password Hashing Otomatis
Saat registrasi, password otomatis di-hash:
```php
'password' => Hash::make($request->password)
```

#### 3. Remember Me
Checkbox "Remember Me" menyimpan session lebih lama:
```blade
<input type="checkbox" name="remember" id="remember">
<label for="remember">Remember me</label>
```

#### 4. Email Verification (Opsional)
Route dengan middleware `verified` memerlukan email terverifikasi:
```php
Route::get('/dashboard', function () {
    return view('dashboard');
})->middleware(['auth', 'verified']);
```

### ‚úÖ Checklist Setelah Instalasi Breeze

- [x] Package Breeze terinstal via Composer
- [x] Scaffolding Breeze terpasang (Controllers, Views, Routes)
- [x] Dependencies frontend terinstal (npm install)
- [x] Assets ter-compile (npm run dev)
- [x] Migrasi database berhasil
- [x] Dapat mengakses halaman `/register`
- [x] Dapat mengakses halaman `/login`
- [x] Dapat membuat akun baru
- [x] Dapat login dengan akun yang dibuat
- [x] Dashboard dapat diakses setelah login
- [x] Tidak dapat akses dashboard tanpa login
- [x] Dapat logout dengan sukses

### üéì Pembelajaran Penting

1. **Keamanan adalah Prioritas**: Laravel Breeze menggunakan praktik terbaik untuk keamanan
2. **Jangan Reinvent the Wheel**: Gunakan package yang sudah teruji seperti Breeze
3. **Pahami Kode yang Dihasilkan**: Jangan hanya copy-paste, baca dan pahami
4. **Middleware adalah Powerful**: Gunakan untuk proteksi route dengan mudah
5. **Session Management Otomatis**: Laravel menangani session secara otomatis

---

### Step 1: Modifikasi Halaman Welcome (Pertemuan Awal)
Mengubah file `resources/views/welcome.blade.php` dari tampilan default Laravel (266 baris) menjadi HTML sederhana:

```html
<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Selamat Datang di LaraPress</title>
</head>
<body>
    <h1>Selamat Datang di Blog LaraPress</h1>
    <p>Ini adalah halaman utama dari aplikasi blog kita.</p>
</body>
</html>
```

### Step 2: Membuat Route Baru
Menambahkan route baru di `routes/web.php`:

```php
Route::get('/tentang-kami', function () {
    return view('about');
});
```

### Step 3: Membuat View About
Membuat file baru `resources/views/about.blade.php`:

```html
<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tentang Kami - LaraPress</title>
</head>
<body>
    <h1>Tentang LaraPress</h1>
    <p>LaraPress adalah aplikasi blog sederhana yang dibuat dengan Laravel 12.</p>
    <p>Proyek ini dibuat untuk tujuan pembelajaran dan pengembangan keterampilan.</p>
</body>
</html>
```

## üåê Endpoint yang Tersedia

### Halaman Publik (Tidak Perlu Login)
| Route | Method | Deskripsi |
|-------|--------|-----------|
| `/` | GET | Halaman utama LaraPress |
| `/tentang-kami` | GET | Halaman tentang LaraPress |
| `/login` | GET, POST | Halaman login pengguna |
| `/register` | GET, POST | Halaman registrasi pengguna baru |
| `/forgot-password` | GET, POST | Halaman lupa password |
| `/reset-password/{token}` | GET, POST | Halaman reset password |

### Halaman yang Memerlukan Autentikasi
| Route | Method | Deskripsi |
|-------|--------|-----------|
| `/dashboard` | GET | Dashboard pengguna |
| `/profile` | GET | Halaman edit profil |
| `/profile` | PATCH | Update profil pengguna |
| `/profile` | DELETE | Hapus akun pengguna |
| `/logout` | POST | Logout pengguna |
| `/verify-email` | GET | Notifikasi verifikasi email |
| `/confirm-password` | GET, POST | Konfirmasi password untuk aksi sensitif |

## üíª Teknologi yang Digunakan

- **Framework**: Laravel 12
- **PHP Version**: 8.x
- **Database**: SQLite (default)
- **Frontend**: Blade Template Engine, Tailwind CSS, Alpine.js
- **Build Tool**: Vite
- **Autentikasi**: Laravel Breeze
- **Testing**: Pest PHP

## üì¶ Instalasi

1. Clone repository ini:
```bash
git clone https://github.com/adiwp/pbw.git
cd pro1
```

2. Install dependencies:
```bash
composer install
npm install
```

3. Buat file `.env`:
```bash
cp .env.example .env
```

4. Generate application key:
```bash
php artisan key:generate
```

5. Jalankan migrasi database:
```bash
php artisan migrate
```

6. (Opsional) Seed data user default:
```bash
php artisan db:seed --class=UserSeeder
```

7. Compile assets:
```bash
npm run dev
```

8. Jalankan development server:
```bash
php artisan serve
```

9. Akses aplikasi di browser:
```
http://localhost:8000
```

## üîë Akun Default

Untuk testing dan development, gunakan kredensial berikut:

### Admin
- **Email**: `admin@larapress.test`
- **Password**: `password123`

### User Demo
- **Email**: `user@larapress.test`
- **Password**: `password123`

> **‚ö†Ô∏è Catatan Keamanan**: Kredensial ini hanya untuk development. Gunakan password yang kuat di production!

## üì∏ Screenshot

### Halaman Utama
![Halaman Utama](docs/screenshot-welcome.png)

Halaman utama menampilkan sambutan sederhana kepada pengunjung blog LaraPress.

### Halaman Autentikasi

#### Registrasi User Baru
![Halaman Registrasi](docs/registrasi.png)
*Form registrasi untuk user baru dengan validasi lengkap*

#### Login
![Halaman Login](docs/login.png)
*Form login dengan opsi "Remember Me"*

#### Dashboard Setelah Login
![Dashboard](docs/berhasil-login.png)
*Dashboard yang muncul setelah berhasil login*

#### Profile Management
![Edit Profile](docs/profil.png)
*Halaman untuk mengelola profil pengguna*

> **üìñ Dokumentasi Lengkap**: Lihat [ITERASI-autentikasi.md](docs/ITERASI-autentikasi.md) untuk dokumentasi detail implementasi autentikasi.

## üîÑ Git History

Semua perubahan telah di-commit dan di-push ke repository dengan pesan commit yang jelas mengenai setiap modifikasi yang dilakukan.

## üìù Roadmap Pengembangan

### ‚úÖ Completed
- [x] **Iterasi 1**: Views & Routing Dasar
- [x] **Iterasi 2**: Sistem Autentikasi dengan Laravel Breeze
- [x] Styling dengan Tailwind CSS
- [x] Dokumentasi lengkap setiap iterasi

### üîÑ In Progress
- [ ] **Iterasi 3**: CRUD Posts/Artikel
  - [ ] Model dan Migration untuk Posts
  - [ ] Controller untuk CRUD operations
  - [ ] Views untuk manage posts
  - [ ] Validasi form

### üìã Planned
- [ ] **Iterasi 4**: Relasi & Otorisasi
  - [ ] Relasi User dan Posts
  - [ ] Authorization policies
  - [ ] User hanya bisa edit/delete post sendiri
  - [ ] Role management (Admin, Author, Reader)

- [ ] **Iterasi 5**: Fitur Lanjutan
  - [ ] Sistem komentar
  - [ ] Kategori dan tag
  - [ ] Search functionality
  - [ ] Upload gambar untuk artikel
  - [ ] Rich text editor
  - [ ] Dashboard admin yang lengkap

---

## ü§ù Kontribusi

Proyek ini dibuat untuk tujuan pembelajaran. Jika Anda ingin berkontribusi:

1. Fork repository ini
2. Buat branch untuk fitur baru (`git checkout -b feature/AmazingFeature`)
3. Commit perubahan Anda (`git commit -m 'Add some AmazingFeature'`)
4. Push ke branch (`git push origin feature/AmazingFeature`)
5. Buat Pull Request

## üë®‚Äçüíª Pengembang

**Adi Wahyu**
- GitHub: [@adiwp](https://github.com/adiwp)
- Repository: [project-laravel](https://github.com/adiwp/project-laravel)

## üìö Resources & Learning

### Dokumentasi Official
- [Laravel Documentation](https://laravel.com/docs/12.x)
- [Laravel Breeze](https://laravel.com/docs/12.x/starter-kits#laravel-breeze)
- [Tailwind CSS](https://tailwindcss.com/docs)

### Community & Learning
- [Laracasts](https://laracasts.com) - Video tutorials berkualitas tinggi
- [Laravel News](https://laravel-news.com) - Berita dan tips Laravel
- [Laravel Daily](https://laraveldaily.com) - Tutorial dan tips harian

## üìÑ Lisensi

Proyek ini menggunakan lisensi MIT. Lihat file [LICENSE](LICENSE) untuk detail.

---

## ‚≠ê Dukungan

Jika proyek ini membantu Anda belajar Laravel, berikan ‚≠ê di GitHub!

<p align="center">
  <strong>Dibuat dengan ‚ù§Ô∏è untuk pembelajaran Laravel</strong>
</p>

<p align="center">
  <sub>¬© 2025 LaraPress. All rights reserved.</sub>
</p>
